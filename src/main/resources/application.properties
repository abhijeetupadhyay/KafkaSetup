spring.application.name=KafkaSetup
spring.kafka.bootstrap-servers=localhost:9092  # Kafka Broker Address
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=all  # Ensure producer acknowledgment from all replicas
spring.kafka.producer.retries=3  # Number of retries for failed messages
spring.kafka.producer.max-in-flight-requests-per-connection=5  # Max requests in-flight before waiting for response

spring.kafka.consumer.group-id=my-consumer-group  # Consumer group ID
spring.kafka.consumer.auto-offset-reset=earliest  # Consume from the beginning if no offset exists
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.enable-auto-commit=false  # Disable auto commit for better offset control
spring.kafka.consumer.max-poll-records=100  # Max number of records per poll request
spring.kafka.consumer.fetch-min-size=1  # Minimum size of data that the consumer will fetch

#spring:
#    kafka:
#        bootstrap-servers: localhost:9092
#        producer:
#            key-serializer: org.apache.kafka.common.serialization.StringSerializer
#            value-serializer: org.apache.kafka.common.serialization.StringSerializer
#        consumer:
#            group-id: "my-consumer-group"
#            auto-offset-reset: earliest
#            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#            value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

#Steps to run kafka broker in local machine
#.\bin\windows\zookeeper-server-start.bat .\config\zookeeper.properties
#.\bin\windows\kafka-server-start.bat .\config\server.properties

